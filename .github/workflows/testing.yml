name: CI Workflow

on:
  push:
    branches:
      - develop
      - master
  pull_request:

jobs:
  build:
    runs-on: zendesk-stable
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
      - uses: zendesk/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: zendesk/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: zendesk/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools
          pip install -r requirements.txt
          pip install flake8
          pip install coveralls
          pip install codecov
          pip install autopep8
          pip install pytest
          pip install mock
          pip install nose
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 .
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Autopep 8
        run: |
          autopep8 --diff --recursive --max-line-length=127 .
      - name: Test with nosetests
        run: |
          nosetests --with-coverage tests/test-utils.py
          nosetests --with-coverage tests/test-core.py
          nosetests --with-coverage tests/test-output.py
          nosetests --with-coverage tests/test-utils-conditions.py
          nosetests --with-coverage tests/test-main.py
          nosetests --with-coverage tests/test-resources.py
          nosetests --with-coverage tests/test-rules-ruleset.py
          nosetests --with-coverage tests/test-rules-processingengine.py

          # Not sure what the secret for this will be, but could be set in GitHub Secrets and replaced
          nosetests --with-coverage --nocapture tests/test-scoutsuite.py -a "!credential"
    # - uses: codecov/codecov-action@v1
    #   with:
    #     file: ./.coverage
    # disabling because it can't find the .lcov coverage file
    # - name: Coveralls
    #   uses: coverallsapp/github-action@master
    #   with:
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
